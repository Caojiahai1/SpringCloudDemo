server:
  port: 5000
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:3000/eureka
  instance:
      instance-id: user-1 #此实例注册到eureka服务端的唯一的实例ID
      prefer-ip-address: true #是否显示IP地址
      leaseRenewalIntervalInSeconds: 10 #eureka客户需要多长时间发送心跳给eureka服务器，表明它仍然活着,默认为30 秒 (与下面配置的单位都是秒)
      leaseExpirationDurationInSeconds: 30 #Eureka服务器在接收到实例的最后一次发出的心跳后，需要等待多久才可以将此实例删除，默认为90秒
spring:
  application:
    name: client-user
  zipkin:
        base-url: http://localhost:7070  #指定Zipkin server地址
  sleuth:
    sampler:
      probability: 1.0  #request采样的数量 默认是0.1 也即是10%  顾名思义 采取10%的请求数据  因为在分布式系统中，数据量可能会非常大，因此采样非常重要。我们示例数据少最好配置为1全采样

# feign启用熔断器
feign:
  hystrix:
    enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000
      circuitBreaker:
        requestVolumeThreshold: 20 # 达到服务连续请求失败次数，会开启熔断器，接下来的请求直接调用fallback降级方法
        sleepWindowInMilliseconds: 5000 # 熔断器开启后重试请求的时间，如果请求成功则关闭熔断器，否则继续开启熔断器
  threadpool:
    default:
      coreSize: 3 # 限流，当有10线程正在请求一个服务的时候，下面的服务请求直接调用fallback降级方法
# 超时时间 因为feign调用了hystrix和ribbon两层，所以他们两的超时时间一起配置才能触发feign的超时时间
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000

# HystrixDashbord监控
management:
  endpoints:
    web:
      exposure:
        include: '*'


